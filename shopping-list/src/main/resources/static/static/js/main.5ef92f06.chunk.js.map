{"version":3,"sources":["todo-list/Button.jsx","todo-list/TodoItem.jsx","todo-list/NewItem.jsx","calls.js","todo-list/Loading.jsx","todo-list/TodoList.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Button","onClick","elem","_this","props","react_default","a","createElement","this","children","Component","TodoList","isCompleteState","item","state","changeState","onChange","Object","objectSpread","changeCount","count","target","value","delete","onDelete","renderCompleteButton","Button_Button","className","content","type","name","min","NewItem","onEnter","event","window","onAdd","keyCode","onKeyDown","Calls","sleep","ms","Promise","resolve","setTimeout","call","_call","asyncToGenerator","regenerator_default","mark","_callee","method","url","dtoIn","headers","body","response","resp","wrap","_context","prev","next","JSON","stringify","fetch","Content-Type","Accept","sent","json","abrupt","stop","_x","_x2","_x3","_x4","apply","arguments","getUri","useCase","getShoppingList","_getShoppingList","_callee2","commandUri","_context2","_x5","deleteShoppingItem","_deleteShoppingItem","_callee3","_context3","_x6","createShoppingItem","_createShoppingItem","_callee4","_context4","_x7","updateShoppingItem","_updateShoppingItem","_callee5","_context5","_x8","Loading","classCallCheck","possibleConstructorReturn","getPrototypeOf","renderItems","items","map","renderItem","index","TodoItem_TodoList","key","id","removeItem","newItem","changeItem","_ref","toConsumableArray","splice","setState","_ref2","serverItem","addItem","_ref3","text","createdAt","Date","push","renderChilds","loadingState","Loading_Loading","Fragment","NewItem_NewItem","error","result","t0","App","TodoList_TodoList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ef92f06.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\n\n\nexport default class Button extends Component {\n\n  static propTypes = {\n    onClick: PropTypes.func\n  };\n\n  onClick = (elem) => {\n    if(typeof this.props.onClick === \"function\" ) {\n      this.props.onClick(elem);\n    }\n  };\n\n  render() {\n    return (\n        <button onClick={this.onClick}>{this.props.children}</button>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\n\nexport default class TodoList extends Component {\n\n  static propTypes = {\n    item: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n  };\n\n  isCompleteState = () => {\n    return this.props.item.state === \"COMPLETE\";\n  };\n\n  changeState = () => {\n    if(typeof this.props.onChange === \"function\" ) {\n      let item = {...this.props.item};\n      if(this.isCompleteState()){\n        item.state = \"NEW\";\n      }else {\n        item.state = \"COMPLETE\";\n      }\n      this.props.onChange(item);\n    }\n  };\n\n  changeCount = (elem) => {\n    if(typeof this.props.onChange === \"function\" ) {\n      let item = {...this.props.item};\n      item.count = elem.target.value;\n      this.props.onChange(item);\n    }\n  };\n\n  delete = () => {\n    if(typeof this.props.onDelete === \"function\" ) {\n      this.props.onDelete();\n    }\n  };\n\n  renderCompleteButton = () => {\n    let child;\n    if(this.isCompleteState()){\n      child = <Button onClick={this.changeState}>Obnov</Button>;\n    }else {\n      child = <Button onClick={this.changeState}>Dokonƒçi</Button>;\n    }\n    return child;\n  };\n\n  render() {\n    return (\n        <div className=\"todo-item\">\n          {this.props.item.content}\n          {this.renderCompleteButton()}\n          <Button onClick={this.delete}>Smazat</Button>\n          <input type=\"number\" name=\"quantity\" value={this.props.item.count} onChange={this.changeCount} min=\"1\" />\n        </div>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\n\n\nexport default class NewItem extends Component {\n\n  static propTypes = {\n    onAdd: PropTypes.func\n  };\n\n  onEnter = (elem) => {\n    let event = elem || window.event;\n    if(typeof this.props.onAdd === \"function\" ) {\n      if(event.keyCode === 13) {\n        this.props.onAdd(elem.target.value);\n        elem.target.value = \"\";\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"new-item\">\n        <input type=\"text\" name=\"text\" onKeyDown={this.onEnter} />\n      </div>\n    );\n  }\n}\n\n","let Calls = {\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  },\n\n  async call(method, url, dtoIn, headers) {\n    let body;\n    if(dtoIn){\n      body = JSON.stringify(dtoIn);\n    }\n\n    let response = await fetch(url, {\n      method: method,\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Accept\": \"application/json\"\n      },\n    });\n    let resp = await response.json();\n    return resp;\n  },\n\n  getUri: function(useCase) {\n    return (\n        \"http://localhost:8080/\" + useCase\n    );\n  },\n\n  async getShoppingList(dtoIn) {\n    let commandUri = this.getUri(\"shoppingList\");\n    return await Calls.call(\"get\", commandUri, dtoIn);\n  },\n\n  async deleteShoppingItem(dtoIn) {\n    let commandUri = this.getUri(\"shoppingItem\");\n    return await Calls.call(\"delete\", commandUri, dtoIn);\n  },\n\n  async createShoppingItem(dtoIn) {\n    let commandUri = this.getUri(\"shoppingItem\");\n    return await Calls.call(\"post\", commandUri, dtoIn);\n  },\n\n  async updateShoppingItem(dtoIn) {\n    let commandUri = this.getUri(\"shoppingItem\");\n    return await Calls.call(\"put\", commandUri, dtoIn);\n  }\n};\n\nexport default Calls;\n","import React, {Component} from 'react';\nimport \"./Loading.css\";\n\n\nexport default class Loading extends Component {\n  render() {\n    return (\n        <div className=\"loader\" />\n    );\n  }\n}\n\n","import React, {Component} from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport NewItem from \"./NewItem\";\nimport Calls from \"../calls\";\nimport Loading from \"./Loading\";\n\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      loadingState: \"INIT\"\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingState: \"LOADING\" });\n    try {\n      let result = await Calls.getShoppingList();\n      this.setState({ items: result, loadingState: \"DONE\" });\n    } catch (error) {\n      this.setState({ error:error, loadingState: \"ERROR\" });\n    }\n  }\n\n  renderItems = () => {\n    return this.state.items.map(this.renderItem);\n  };\n\n  renderItem = (item, index) => {\n    return (\n      <TodoItem\n        key={item.id}\n        item={item}\n        onDelete={() => {\n          this.removeItem(item, index);\n        }}\n        onChange={newItem => {\n          this.changeItem(item, index, newItem);\n        }}\n      />\n    );\n  };\n\n  removeItem = async (item, index) => {\n    let items = [...this.state.items];\n    await Calls.deleteShoppingItem({ id: item.id });\n    items.splice(index, 1);\n    this.setState({ items: items });\n  };\n\n  changeItem = async (item, index, newItem) => {\n    let items = [...this.state.items];\n\n    let serverItem = await Calls.updateShoppingItem(newItem);\n\n    items[index] = serverItem;\n    this.setState({ items: items });\n  };\n\n  addItem = async text => {\n    let items = [...this.state.items];\n\n    let serverItem = await Calls.createShoppingItem({\n      content: text,\n      state: \"NEW\",\n      count: 1,\n      // createdAt: new Date().toUTCString()\n      createdAt: new Date()\n    });\n    items.push(serverItem);\n    this.setState({ items: items });\n  };\n\n  renderChilds = () => {\n    switch (this.state.loadingState) {\n      case \"LOADING\":\n        return <Loading />;\n      case \"DONE\":\n        return (\n          <React.Fragment>\n            {this.renderItems()}\n            <NewItem onAdd={this.addItem} />\n          </React.Fragment>\n        );\n      case \"ERROR\":\n        return <div>Error: {\"\"+this.state.error}</div>;\n      default:\n        return <div>Error</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"todo-list\">{this.renderChilds()}</div>;\n  }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport TodoList from \"./todo-list/TodoList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}